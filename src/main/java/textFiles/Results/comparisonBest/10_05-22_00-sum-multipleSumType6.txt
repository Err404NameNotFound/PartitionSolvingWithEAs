Input: [48937, 16006, 32209, 12401, 13960, 15228, 44748, 41281, 866, 27283, ..., 69, 69, 69, 69, 69, 69, 69, 69, 69, 69]
input type:      uniform random values from given range except last x fields as sum of all other fields (6)
array length:    10.000
number of runs:  1.000
Limit per run:   921.030
ratio 100 * m/n: 0,15609 -> easy
lowest value:    1
highest value:   50.000
Fields with sum: 100
---------
algo type:          RLS-N;   EA-SM;   RLS-R;    pmut;      EA;     RLS
algo param:           k=2;     3/n;     k=2;   -2,75;       -;       -
avg mut/change:     2,000;   3,052;   1,498;   2,212;   1,572;   1,000
avg mut/step:       2,000;   3,000;   1,500;   2,270;   1,000;   1,000
---------
total avg count:   84.626; 123.060; 139.587; 160.072; 257.493; 757.418
avg eval count:    84.626; 122.261; 137.236; 148.484; 209.080;  12.078
max eval count:   660.338; 886.765; 872.131; 900.315; 920.446;  70.540
min eval count:        77;     300;     115;     163;     261;      48
---------
fails:                  0;       1;       3;      15;      68;     820
fail ratio:         0,000;   0,001;   0,003;   0,015;   0,068;   0,820
avg fail dif:          -1;       1;       1;       1;       1;       4
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p


TODO NEU machen weil mutation rates nicht passen