1.000.000 runs
0 Steps per run -> initial random distribution is researched
n = 10.000
p = 0.1
array is newly generated every 1% of the total steps -> 100 different arrays
optimal solutions: 16

Experiment repeated twice with result 15 and 16 ->

Probably 15/1.000.000 = 0,0015% of the solutions are optimal -> exponentially many

log2(0.000015) = -16.02468...

out of the 2^10.000 solutions approximately 2^9984 are optimal

for  2.000.000 runs result is  27 approximately  2 * 15

for 10.000.000 runs result is 110 approximately 10 * 11
8 out of 1.000.000 solutions were optimal with 1000 different arrays


algo type:            RLS;   RLS-R;   RLS-N;      EA;   EA-SM  | (fmut needs way more steps (factor >= 10))
algo param:             -;     k=2;     k=2;       -;     2/n
uniform           921.030;   1.112;     641;   2.799;   1.684
binomial          920.108;     474;     312;   1.159;     710

-> Binomial distributed input (10000, 0.1) seems easier than uniform distributed input(800, 1200)