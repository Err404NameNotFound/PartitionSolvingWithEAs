Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 69, 69, 69, 69, 69, 69, 69, 69, 69, 69]
input type:      all values are one except the last x fields as sum of all other fields (5)
array length:    10.000
number of runs:  1.000
Limit per run:   921.030
ratio 100 * m/n: 0,06109 -> easy
Fields with sum: 100
---------
algo type:         RLS-N;  RLS-R;  RLS-R;  RLS-R;    RLS;  RLS-N;  RLS-N
algo param:          k=3;    k=4;    k=3;    k=2;      -;    k=4;    k=2
avg mut/change:    3,000;  2,389;  1,996;  1,329;  1,000;  3,989;  1,992
avg mut/step:      3,000;  2,499;  2,002;  1,500;  1,000;  4,000;  2,000
---------
total avg count:     177;    223;    244;    302;    349;  3.374;  4.856
avg eval count:      177;    223;    244;    302;    349;  3.374;  4.856
max eval count:      808;  1.068;    930;  1.178;  1.645; 39.851; 64.096
min eval count:        0;      0;      0;      1;      0;      1;      0
---------
fails:                 0;      0;      0;      0;      0;      0;      0
fail ratio:        0,000;  0,000;  0,000;  0,000;  0,000;  0,000;  0,000
avg fail dif:         -1;     -1;     -1;     -1;     -1;     -1;     -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
