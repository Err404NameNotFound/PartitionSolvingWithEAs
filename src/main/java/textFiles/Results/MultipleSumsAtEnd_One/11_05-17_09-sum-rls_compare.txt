Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 695, 695, 695, 695, 695, 695, 695, 695, 695, 695]
input type:      all values are one except the last x fields as sum of all other fields (5)
array length:    100.000
number of runs:  1.000
Limit per run:   11.512.930
ratio 100 * m/n: 0,00944 -> easy
Fields with sum: 100
---------
algo type:          RLS-N;   RLS-R;   RLS-R;   RLS-R;     RLS;   RLS-N;   RLS-N
algo param:           k=3;     k=4;     k=3;     k=2;       -;     k=4;     k=2
avg mut/change:     3,000;   2,391;   1,995;   1,328;   1,000;   3,999;   1,999
avg mut/step:       3,000;   2,500;   2,000;   1,500;   1,000;   4,000;   2,000
---------
total avg count:    1.698;   2.144;   2.490;   2.945;   3.607;  33.892;  48.301
avg eval count:     1.698;   2.144;   2.490;   2.945;   3.607;  33.892;  48.301
max eval count:     7.120;   8.768;  10.513;  12.704;  20.153; 417.508; 674.990
min eval count:         1;       0;       4;       3;       1;       0;      10
---------
fails:                  0;       0;       0;       0;       0;       0;       0
fail ratio:         0,000;   0,000;   0,000;   0,000;   0,000;   0,000;   0,000
avg fail dif:          -1;      -1;      -1;      -1;      -1;      -1;      -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
