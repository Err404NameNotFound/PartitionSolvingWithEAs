input type;      uniform random values from given range (1)
array length;    50.000
number of runs;  1.000
Limit per run;   5.409.890
ratio 100 * m/n; 0,03122 -> easy
lowest value;    1
highest value;   50.000
---------
algo type;            RLS-N;     RLS-R;     RLS-R;     RLS-N;     RLS-R;     RLS-N;       RLS
algo param;             n=2;       r=3;       r=4;       n=3;       r=2;       n=4;         -
avg mut/change;       2,000;     1,996;     2,476;     3,000;     1,502;     4,000;     1,000
avg mut/step;         2,000;     2,000;     2,500;     3,000;     1,500;     4,000;     1,000
---------
total avg count;     83.118;   104.748;   105.513;   112.223;   114.486;   121.927; 2.443.567
avg eval count;      83.118;   104.748;   105.513;   112.223;   114.486;   121.927;    45.834
max eval count;     778.110; 1.453.252;   898.974; 1.377.471;   915.268;   816.633;   485.275
min eval count;         197;       126;        45;       212;       271;       155;       128
---------
fails;                    0;         0;         0;         0;         0;         0;       447
fail ratio;           0,000;     0,000;     0,000;     0,000;     0,000;     0,000;     0,447
avg fail dif;            -1;        -1;        -1;        -1;        -1;        -1;         1
---------
RLS     -> standard RLS; uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS; uniform random neighbour with Hamming Distance <= n
RLS-R   -> modified RLS; uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,r}
EA      -> standard EA ; each bit is flipped with prob 1/n
EA-SM   -> modified EA ; each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
pmut    -> flips k random bits where k is chosen from powerlaw distribution
