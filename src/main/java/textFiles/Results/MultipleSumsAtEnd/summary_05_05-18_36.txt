Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 695, 695, 695, 695, 695, 695, 695, 695, 695, 695]
input type:      all values are one except the last x fields as sum of all other fields (5)
array length:    100.000
number of runs:  1.000
Limit per run:   11.512.930
ratio 100 * m/n: 0,00944 -> easy
Fields with sum: 100
---------
algo type:               RLS;      RLS-R;         EA;      EA-SM;      EA-SM;       fmut
algo param:                -;        k=3;          -;        4/n;      100/n;        0.5
avg mut/change:        1,000;      1,995;      1,477;      4,132;     99,918;   2437,192
avg mut/step:          1,000;      2,000;      1,000;      3,999;     99,968;  12511,451
---------
total avg count:       3.455;      2.479;      4.601;      1.509;        149;        140
avg eval count:        3.455;      2.479;      4.601;      1.509;        149;        140
max eval count:       13.213;     10.338;     20.143;      7.143;        525;        405
min eval count:            1;          5;          0;          7;          3;          0
---------
fails:                     0;          0;          0;          0;          0;          0
fail ratio:            0,000;      0,000;      0,000;      0,000;      0,000;      0,000
avg fail dif:             -1;         -1;         -1;         -1;         -1;         -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p