number of runs;  1.000
Limit per run;   921.030
array length;    10.000
ratio 100 * m/n; 0,13288 -> easy
input type;      OneMax equivalent for partition (2)
Fields with sum; 1
Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 1, 1, 1, 1, 1, 1, 1, 1, 1, 9999]
---------
algo type;             RLS;    RLS-R;    RLS-R;    RLS-R;    RLS-N;    RLS-N;    RLS-N
algo param;              -;      r=2;      r=3;      r=4;      n=3;      n=2;      n=4
avg mut/change;      1,000;    1,181;    1,688;    1,866;    3,000;    1,998;    3,998
avg mut/step;        1,000;    1,500;    2,000;    2,500;    3,000;    2,000;    4,000
---------
total avg count;    90.750;  167.177;  234.870;  308.280;  921.030;  921.030;  921.030
avg eval count;     90.750;  167.177;  234.870;  308.280;       -1;       -1;       -1
max eval count;    160.023;  323.371;  466.507;  595.836;       -1;       -1;       -1
min eval count;     65.056;  121.293;  163.126;  208.812;       -1;       -1;       -1
---------
fails;                   0;        0;        0;        0;    1.000;    1.000;    1.000
fail ratio;          0,000;    0,000;    0,000;    0,000;    1,000;    1,000;    1,000
avg fail dif;           -1;       -1;       -1;       -1;       36;       53;      262
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= n
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,r}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
pmut    -> flips k random bits where k is chosen from powerlaw distribution
