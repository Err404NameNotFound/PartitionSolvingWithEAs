number of runs;  1.000
Limit per run;   921.030
array length;    10.000
ratio 100 * m/n; 0,16618 -> easy
input type;      overlapped (12)
---------
algo type;                 RLS-N;          RLS-N;          RLS-N;          RLS-R;          RLS-R;          RLS-R;            RLS
algo param;                  n=2;            n=3;            n=4;            r=4;            r=3;            r=2;              -
avg mut/change;            2,000;          3,000;          4,000;          2,551;          2,067;          1,573;          1,000
avg mut/step;              2,000;          3,000;          4,000;          2,500;          2,000;          1,500;          1,000
---------
total avg count;          82.975;        127.607;        141.215;        143.621;        161.500;        179.126;        920.109
avg eval count;           82.975;        126.813;        138.083;        137.351;        159.215;        169.354;             71
max eval count;          726.270;        808.236;        916.151;        852.743;        919.294;        920.526;             71
min eval count;              235;            300;             67;            213;            181;            220;             71
---------
fails;                         0;              1;              4;              8;              3;             13;            999
fail ratio;                0,000;          0,001;          0,004;          0,008;          0,003;          0,013;          0,999
avg fail dif;                 -1;              1;              1;              1;              1;              1;            384
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= n
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,r}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
pmut    -> flips k random bits where k is chosen from powerlaw distribution
