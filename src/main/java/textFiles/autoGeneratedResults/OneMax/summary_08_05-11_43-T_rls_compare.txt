***************************
Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 1, 1, 1, 1, 1, 1, 1, 1, 1, 49999]
input type:      OneMax equivalent for partition (2)
array length:    50.000
number of runs:  99
Limit per run:   5.409.890
ratio 100 * m/n: 0,03122 -> easy
---------
algo type:              RLS;     RLS-N;     RLS-N;     RLS-N;     RLS-R;     RLS-R;     RLS-R
algo param:               -;       k=2;       k=3;       k=4;       k=2;       k=3;       k=4
avg mut/change:       1,000;       NaN;       NaN;       NaN;     1,181;     1,688;     1,867
avg mut/step:         1,000;       NaN;       NaN;       NaN;     1,500;     2,000;     2,501
---------
total avg count:    520.309; 5.409.890; 5.409.890; 5.409.890; 1.023.506; 1.398.299; 1.853.200
avg eval count:     520.309;        -1;        -1;        -1; 1.023.506; 1.398.299; 1.853.200
max eval count:     679.020;         0;         0;         0; 1.375.614; 2.129.685; 2.660.630
min eval count:     417.177;        -1;        -1;        -1;   787.737; 1.065.251; 1.434.172
---------
fails:                    0;        99;        99;        99;         0;         0;         0
fail ratio:           0,000;     1,000;     1,000;     1,000;     0,000;     0,000;     0,000
avg fail dif:            -1;       229;       153;     1.215;        -1;        -1;        -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
