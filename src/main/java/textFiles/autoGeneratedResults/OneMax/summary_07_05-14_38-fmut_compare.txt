***************************
Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 1, 1, 1, 1, 1, 1, 1, 1, 1, 999]
input type:      OneMax equivalent for partition (2)
array length:    1.000
number of runs:  3
Limit per run:   69.080
ratio 100 * m/n: 0,99643 -> easy
---------
algo type:           fmut;    fmut;    fmut;    fmut;    fmut
algo param:         0,100;   0,250;   0,500;   0,750;   0,900
avg mut/change:     5,523;   3,853;   3,352;   2,538;   1,963
avg mut/step:     225,578; 187,571; 125,458;  62,820;  25,041
---------
total avg count:   67.081;  22.721;  12.168;   8.962;   8.330
avg eval count:    67.081;  22.721;  12.168;   8.962;   8.330
max eval count:    67.843;  25.294;  13.186;  10.023;   9.053
min eval count:    66.482;  18.680;  11.115;   6.990;   7.748
---------
fails:                  0;       0;       0;       0;       0
fail ratio:         0,000;   0,000;   0,000;   0,000;   0,000
avg fail dif:          -1;      -1;      -1;      -1;      -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
