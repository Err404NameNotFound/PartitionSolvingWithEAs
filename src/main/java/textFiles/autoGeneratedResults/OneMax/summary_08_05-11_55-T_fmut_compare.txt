***************************
Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 1, 1, 1, 1, 1, 1, 1, 1, 1, 999]
input type:      OneMax equivalent for partition (2)
array length:    1.000
number of runs:  35
Limit per run:   69.080
ratio 100 * m/n: 0,99643 -> easy
---------
algo type:           fmut;    fmut;    fmut;    fmut;    fmut
algo param:         0,100;   0,250;   0,500;   0,750;   0,900
avg mut/change:     6,028;   4,341;   3,026;   2,373;   1,820
avg mut/step:     225,186; 187,480; 125,310;  63,049;  25,795
---------
total avg count:   59.638;  26.531;  13.294;   8.912;   7.239
avg eval count:    57.684;  26.531;  13.294;   8.912;   7.239
max eval count:    68.370;  40.188;  21.410;  11.738;   9.533
min eval count:    42.382;  17.560;   8.890;   6.352;   5.738
---------
fails:                  6;       0;       0;       0;       0
fail ratio:         0,171;   0,000;   0,000;   0,000;   0,000
avg fail dif:           1;      -1;      -1;      -1;      -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
