Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 1, 1, 1, 1, 1, 1, 1, 1, 1, 999]
input type:      OneMax equivalent for partition (2)
array length:    1.000
number of runs:  3
Limit per run:   69.080
ratio 100 * m/n: 0,01004 -> easy
---------
algo type:           fmut;    fmut;    fmut;    fmut;    fmut
algo param:         0,100;   0,250;   0,500;   0,750;   0,900
avg mut/change:     3,796;   3,445;   3,269;   1,952;   2,030
avg mut/step:     225,749; 187,001; 126,565;  62,375;  27,184
---------
total avg count:   61.325;  26.906;  13.335;   7.353;   6.990
avg eval count:    57.448;  26.906;  13.335;   7.353;   6.990
max eval count:    59.694;  30.479;  16.253;   7.626;   7.363
min eval count:    55.202;  23.399;  11.377;   6.933;   6.793
---------
fails:                  1;       0;       0;       0;       0
fail ratio:         0,333;   0,000;   0,000;   0,000;   0,000
avg fail dif:           1;      -1;      -1;      -1;      -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
