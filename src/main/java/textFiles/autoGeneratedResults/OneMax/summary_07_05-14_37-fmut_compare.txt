***************************
Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 1, 1, 1, 1, 1, 1, 1, 1, 1, 999]
input type:      OneMax equivalent for partition (2)
array length:    1.000
number of runs:  3
Limit per run:   69.080
ratio 100 * m/n: 0,99643 -> easy
---------
algo type:           fmut;    fmut;    fmut;    fmut;    fmut
algo param:         0,100;   0,250;   0,500;   0,750;   0,900
avg mut/change:     6,106;   4,297;   2,945;   2,163;   1,386
avg mut/step:     225,489; 187,915; 124,276;  61,304;  25,995
---------
total avg count:   59.356;  25.285;  12.488;   9.756;   6.877
avg eval count:    54.494;  25.285;  12.488;   9.756;   6.877
max eval count:    60.563;  34.974;  13.995;  10.387;   7.591
min eval count:    48.426;  18.027;  11.227;   8.732;   6.257
---------
fails:                  1;       0;       0;       0;       0
fail ratio:         0,333;   0,000;   0,000;   0,000;   0,000
avg fail dif:           1;      -1;      -1;      -1;      -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
