Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 1, 1, 1, 1, 1, 1, 1, 1, 1, 999]
input type:      OneMax equivalent for partition (2)
array length:    1.000
number of runs:  3
Limit per run:   69.080
ratio 100 * m/n: 0,01004 -> easy
---------
algo type:            EA;  EA-SM;  EA-SM;  EA-SM;  EA-SM;  EA-SM
algo param:            -;    2/n;    3/n;    4/n;    5/n;   10/n
avg mut/change:    1,284;  1,729;  2,299;  2,928;    NaN;    NaN
avg mut/step:      0,997;  2,002;  2,993;  3,995;    NaN;    NaN
---------
total avg count:  16.053; 22.523; 31.572; 55.527; 69.080; 69.080
avg eval count:   16.053; 22.523; 31.572; 48.751;     -1;     -1
max eval count:   18.177; 28.394; 39.188; 48.840;      0;      0
min eval count:   13.482; 19.407; 27.521; 48.663;     -1;     -1
---------
fails:                 0;      0;      0;      1;      3;      3
fail ratio:        0,000;  0,000;  0,000;  0,333;  1,000;  1,000
avg fail dif:         -1;     -1;     -1;      1;      5;     72
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
