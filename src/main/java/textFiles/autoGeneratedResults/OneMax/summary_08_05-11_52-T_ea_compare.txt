***************************
Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 1, 1, 1, 1, 1, 1, 1, 1, 1, 49999]
input type:      OneMax equivalent for partition (2)
array length:    50.000
number of runs:  13
Limit per run:   5.409.890
ratio 100 * m/n: 0,03122 -> easy
---------
algo type:               EA;     EA-SM;     EA-SM;     EA-SM;     EA-SM;     EA-SM
algo param:               -;       2/n;       3/n;       4/n;       5/n;      10/n
avg mut/change:       1,272;     1,752;     2,337;     2,968;       NaN;       NaN
avg mut/step:         1,000;     2,000;     3,000;     4,000;       NaN;       NaN
---------
total avg count:  1.375.012; 1.659.888; 3.006.594; 5.205.803; 5.409.890; 5.409.890
avg eval count:   1.375.012; 1.659.888; 3.006.594; 4.879.264;        -1;        -1
max eval count:   1.744.277; 1.925.468; 4.566.043; 5.231.404;         0;         0
min eval count:   1.178.602; 1.488.481; 2.675.991; 4.343.553;        -1;        -1
---------
fails:                    0;         0;         0;         8;        13;        13
fail ratio:           0,000;     0,000;     0,000;     0,615;     1,000;     1,000
avg fail dif:            -1;        -1;        -1;         1;        52;     2.640
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
