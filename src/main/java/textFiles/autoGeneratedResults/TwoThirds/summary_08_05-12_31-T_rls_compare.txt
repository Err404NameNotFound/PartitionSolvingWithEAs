***************************
Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 1, 1, 1, 1, 1, 1, 1, 1, 924998, 924998]
input type:      Carsten Witts worst case input (1/3, 1/3, 1/3(n-2), ...) (4)
array length:    1.000.000
number of runs:  742
Limit per run:   138.155.110
ratio 100 * m/n: 0,00198 -> easy
---------
algo type:              RLS;     RLS-N;     RLS-N;     RLS-N;     RLS-R;     RLS-R;     RLS-R
algo param:               -;       k=2;       k=3;       k=4;       k=2;       k=3;       k=4
avg mut/change:       1,000;     2,000;     3,000;     4,000;     1,327;     1,982;     2,380
avg mut/step:         1,000;     2,000;     3,000;     4,000;     1,500;     2,000;     2,501
---------
total avg count:    916.730;   688.726;   128.945;   444.487;   257.214;   203.719;   143.193
avg eval count:     359.605;   688.726;   128.945;   444.487;   257.214;   203.719;   143.193
max eval count:   2.945.460; 8.711.794; 1.193.474; 4.121.873; 2.906.836; 2.131.544; 1.517.930
min eval count:           6;        16;         0;        13;         3;         8;         6
---------
fails:                    3;         0;         0;         0;         0;         0;         0
fail ratio:           0,004;     0,000;     0,000;     0,000;     0,000;     0,000;     0,000
avg fail dif:       424.999;        -1;        -1;        -1;        -1;        -1;        -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
