***************************
Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 1, 1, 1, 1, 1, 1, 1, 1, 923, 923]
input type:      Carsten Witts worst case input (1/3, 1/3, 1/3(n-2), ...) (4)
array length:    1.000
number of runs:  1.000
Limit per run:   69.080
ratio 100 * m/n: 0,98502 -> easy
---------
algo type:           fmut;    fmut;    fmut;    fmut;    fmut
algo param:         0,100;   0,250;   0,500;   0,750;   0,900
avg mut/change:   158,746; 121,382;  79,374;  42,574;  20,610
avg mut/step:     224,440; 185,985; 127,664;  64,385;  25,887
---------
total avg count:       24;      19;      18;      22;      34
avg eval count:        24;      19;      18;      22;      34
max eval count:       119;      68;      71;     102;     267
min eval count:         0;       0;       0;       0;       0
---------
fails:                  0;       0;       0;       0;       0
fail ratio:         0,000;   0,000;   0,000;   0,000;   0,000
avg fail dif:          -1;      -1;      -1;      -1;      -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
