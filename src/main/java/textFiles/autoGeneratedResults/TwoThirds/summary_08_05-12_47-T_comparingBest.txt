***************************
Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 1, 1, 1, 1, 1, 1, 1, 1, 923, 923]
input type:      Carsten Witts worst case input (1/3, 1/3, 1/3(n-2), ...) (4)
array length:    1.000
number of runs:  1.000
Limit per run:   69.080
ratio 100 * m/n: 0,98502 -> easy
---------
algo type:          RLS-N;   EA-SM;    fmut
algo param:           k=3;    10/n;   0,500
avg mut/change:     2,999;  10,061;  78,424
avg mut/step:       2,997;  10,033; 129,256
---------
total avg count:      135;      50;      18
avg eval count:       135;      50;      18
max eval count:     1.169;     357;      70
min eval count:         0;       0;       0
---------
fails:                  0;       0;       0
fail ratio:         0,000;   0,000;   0,000
avg fail dif:          -1;      -1;      -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
