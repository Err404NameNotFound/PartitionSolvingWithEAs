***************************
Input: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ..., 1, 1, 1, 1, 1, 1, 1, 1, 924998, 924998]
input type:      Carsten Witts worst case input (1/3, 1/3, 1/3(n-2), ...) (4)
array length:    1.000.000
number of runs:  429
Limit per run:   138.155.110
ratio 100 * m/n: 0,00198 -> easy
---------
algo type:               EA;     EA-SM;     EA-SM;     EA-SM;     EA-SM;     EA-SM
algo param:               -;       2/n;       3/n;       4/n;       5/n;      10/n
avg mut/change:       1,468;     2,249;     3,154;     4,109;     5,084;    10,029
avg mut/step:         1,000;     2,000;     3,000;     3,999;     4,999;    10,001
---------
total avg count:    401.229;   178.906;   117.962;    89.120;    74.582;    42.495
avg eval count:     401.229;   178.906;   117.962;    89.120;    74.582;    42.495
max eval count:   3.324.190; 1.562.252; 1.007.004;   926.626;   653.333;   491.418
min eval count:           3;         4;         6;         2;         7;         9
---------
fails:                    0;         0;         0;         0;         0;         0
fail ratio:           0,000;     0,000;     0,000;     0,000;     0,000;     0,000
avg fail dif:            -1;        -1;        -1;        -1;        -1;        -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
