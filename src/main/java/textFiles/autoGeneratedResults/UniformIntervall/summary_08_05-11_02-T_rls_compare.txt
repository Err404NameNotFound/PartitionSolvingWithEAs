***************************
input type:      uniform random values from given range (1)
array length:    50.000
number of runs:  1.000
Limit per run:   5.409.890
ratio 100 * m/n: 0,03322 -> easy
lowest value:    1
highest value:   100.000
---------
algo type:              RLS;     RLS-N;     RLS-N;     RLS-N;     RLS-R;     RLS-R;     RLS-R
algo param:               -;       k=2;       k=3;       k=4;       k=2;       k=3;       k=4
avg mut/change:       1,000;     2,000;     3,000;     4,000;     1,505;     1,993;     2,476
avg mut/step:         1,000;     2,000;     3,000;     4,000;     1,500;     2,000;     2,501
---------
total avg count:  3.337.537;   179.230;   229.459;   255.981;   257.971;   220.364;   230.338
avg eval count:      54.974;   179.230;   229.459;   255.981;   257.971;   220.364;   230.338
max eval count:     362.953; 1.459.050; 2.297.736; 3.175.530; 2.541.675; 2.250.608; 2.128.183
min eval count:         379;       204;       252;       223;       129;       136;       284
---------
fails:                  613;         0;         0;         0;         0;         0;         0
fail ratio:           0,613;     0,000;     0,000;     0,000;     0,000;     0,000;     0,000
avg fail dif:             2;        -1;        -1;        -1;        -1;        -1;        -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
