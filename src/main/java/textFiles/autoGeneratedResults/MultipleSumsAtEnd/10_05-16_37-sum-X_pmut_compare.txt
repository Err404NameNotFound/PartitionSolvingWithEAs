Input: [33522, 25145, 48003, 30016, 42490, 10079, 18317, 16933, 5619, 35744, ..., 695, 695, 695, 695, 695, 695, 695, 695, 695, 695]
input type:      uniform random values from given range except last x fields as sum of all other fields (6)
array length:    100.000
number of runs:  40
Limit per run:   11.512.930
ratio 100 * m/n: 0,01561 -> easy
lowest value:    1
highest value:   50.000
Fields with sum: 100
---------
algo type:             pmut;      pmut;      pmut;      pmut;      pmut;      pmut;      pmut;      pmut;      pmut
algo param:           -1,25;     -1,50;     -1,75;     -2,00;     -2,25;     -2,50;     -2,75;     -3,00;     -3,25
avg mut/change:     620,289;   200,302;    18,108;     7,334;     4,297;     3,173;     2,347;     1,884;     1,721
avg mut/step:      1198,003;   223,415;    42,133;    10,986;     4,656;     2,931;     2,284;     1,945;     1,728
---------
total avg count:    242.467;   108.661;   118.432;   104.137;    90.060;    90.594;    72.783;    99.266;   137.006
avg eval count:     242.467;   108.661;   118.432;   104.137;    90.060;    90.594;    72.783;    99.266;   137.006
max eval count:   1.658.733;   411.979;   783.458;   388.853;   424.315;   433.715;   409.236;   582.682;   779.890
min eval count:      12.510;       407;     3.217;       592;       722;       458;     4.720;     1.128;     2.447
---------
fails:                    0;         0;         0;         0;         0;         0;         0;         0;         0
fail ratio:           0,000;     0,000;     0,000;     0,000;     0,000;     0,000;     0,000;     0,000;     0,000
avg fail dif:            -1;        -1;        -1;        -1;        -1;        -1;        -1;        -1;        -1
---------
RLS     -> standard RLS: uniform random neighbour with Hamming Distance == 1
RLS-N   -> modified RLS: uniform random neighbour with Hamming Distance <= k
RLS-R   -> modified RLS: uniform random neighbour with Hamming Distance == x, where x is chosen uniform random from {1,...,k}
EA      -> standard EA : each bit is flipped with prob 1/n
EA-SM   -> modified EA : each bit is flipped with prob c/n
fmut    -> 1 bit flip with prob p and uniform random amount with 1-p
